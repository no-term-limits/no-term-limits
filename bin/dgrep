#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o pipefail

# HELP: docker: grep docker items

query="$1"
additional_docker_options=${*:2}

# docker ps gives '"docker ps" accepts no arguments.' error when trying 'docker ps ""'
# so do not surround variable in quotes in case it is blank
# shellcheck disable=SC2086
tmp_containers=$(docker ps $additional_docker_options | grep "$query")

if [ "$(wc -l <<<"$tmp_containers")" -gt 1 ]; then
  found_containers=$(awk '{print $1 " " $NF}' <<<"$tmp_containers")

  if [[ -n "$NO_TERM_LIMITS_LESS_RELEVANT_DOCKER_CONTAINER_REGEX" ]]; then
    found_containers=$(grep -vE "$NO_TERM_LIMITS_LESS_RELEVANT_DOCKER_CONTAINER_REGEX" <<<"$found_containers")
  fi

  found_container=$(head -n1 <<<"$found_containers" | tail -n1)
  >&2 echo -e "Found $(wc -l <<<"$found_containers") containers:\n$found_containers"
  >&2 echo -e "\nUsing $found_container"

  awk '{print $1}' <<<"$found_container"
else
  awk '{print $1}' <<<"$tmp_containers"
fi
