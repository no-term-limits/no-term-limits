#!/usr/bin/env bash

function error_handler() {
  echo >&2 "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o pipefail

# HELP: auto_maintain: gitsr

if type setopt >/dev/null 2>&1; then
  setopt SH_WORD_SPLIT
fi

old=$1
new=$2
file=""
files=$( (grep "$old" . -lrE --exclude-dir='vendor' --exclude-dir='.svn' --exclude-dir='.git' --exclude-dir='log' --exclude-dir='node_modules' --exclude-dir='target' --exclude-dir=doc --exclude-dir=manifests --exclude-dir=coverage || echo '') | uniq)

if [[ -n "$files" ]]; then
  old=$(echo $old | sed -E 's/\(/\(/g' | sed -E 's/\)/\)/g')
  while read -r file; do
    perl -pi -e "s,$old,$new,g" "$file"
  done <<<"$files"
fi

file_count=$(wc -l <<<"$files")
if [[ "$file_count" != 0 ]]; then
  echo $files
fi
